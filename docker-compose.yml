version: "3.9"
services:
  test-observer-api:
    image: test-observer-api
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        VERSION: ${VERSION:-0.1.2}
    volumes:
      - ./test_observer:/test_observer
      - ./tests:/tests
      - ./migrations:/migrations
      - ./scripts:/scripts
    ports:
      - "30000:30000"
    depends_on:
      - test-observer-frontend
      - test-observer-db
      - test-observer-redis
    environment:
      DB_URL: "postgresql+pg8000://test_observer_user:test_observer_password@test-observer-db:5432/test_observer_db"
      CELERY_BROKER_URL: "redis://test-observer-redis:6379"
      # Issue tracking API credentials (set these in your environment or .env file)
      GITHUB_TOKEN: "${GITHUB_TOKEN:-}"
      JIRA_USERNAME: "${JIRA_USERNAME:-}"
      JIRA_TOKEN: "${JIRA_TOKEN:-}"
      JIRA_BASE_URL: "${JIRA_BASE_URL:-https://warthogs.atlassian.net}"

  test-observer-frontend:
    image: test-observer-frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "30001:80" # Adjust the port mapping as needed

  test-observer-celery:
    image: test-observer-api
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        VERSION: ${VERSION:-0.1.2}
    command: celery -A tasks.celery worker -B -c 1
    depends_on:
      - test-observer-db
      - test-observer-redis
    environment:
      DB_URL: "postgresql+pg8000://test_observer_user:test_observer_password@test-observer-db:5432/test_observer_db"
      CELERY_BROKER_URL: "redis://test-observer-redis:6379"
      # Issue tracking API credentials (set these in your environment or .env file)
      GITHUB_TOKEN: "${GITHUB_TOKEN:-}"
      JIRA_USERNAME: "${JIRA_USERNAME:-}"
      JIRA_TOKEN: "${JIRA_TOKEN:-}"
      JIRA_BASE_URL: "${JIRA_BASE_URL:-https://warthogs.atlassian.net}"
    volumes:
      - ./test_observer:/test_observer
      - ./tests:/tests
      - ./migrations:/migrations
      - ./scripts:/scripts

  test-observer-redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  test-observer-db:
    image: postgres:15
    environment:
      POSTGRES_USER: test_observer_user
      POSTGRES_PASSWORD: test_observer_password
      POSTGRES_DB: test_observer_db
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

volumes:
  db_data:
  redis_data:
